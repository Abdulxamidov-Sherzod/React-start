[{"D:\\pdp lesson\\react-start\\my-app\\src\\index.js":"1","D:\\pdp lesson\\react-start\\my-app\\src\\App.js":"2","D:\\pdp lesson\\react-start\\my-app\\src\\reportWebVitals.js":"3","D:\\pdp lesson\\react-start\\my-app\\src\\components\\counter.jsx":"4","D:\\pdp lesson\\react-start\\my-app\\src\\components\\list.jsx":"5"},{"size":570,"mtime":1610399907158,"results":"6","hashOfConfig":"7"},{"size":263,"mtime":1610364353186,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":736,"mtime":1610298113682,"results":"10","hashOfConfig":"7"},{"size":4235,"mtime":1610400463280,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1epqgd4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\pdp lesson\\react-start\\my-app\\src\\index.js",[],["25","26"],"D:\\pdp lesson\\react-start\\my-app\\src\\App.js",["27","28","29"],"import logo from './logo.svg';\nimport './App.css';\nimport Counter from './components/counter';\nimport List from './components/list';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <List/>\n      <h1></h1>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\pdp lesson\\react-start\\my-app\\src\\reportWebVitals.js",[],"D:\\pdp lesson\\react-start\\my-app\\src\\components\\counter.jsx",[],"D:\\pdp lesson\\react-start\\my-app\\src\\components\\list.jsx",["30","31","32"],"import React, { Component } from 'react'\r\nimport './style/list.scss'\r\nimport \"./FA/css/all.min.css\"\r\nimport { Modal, Button } from 'antd';\r\n\r\n\r\nexport default class List extends Component {\r\n\r\n    state={\r\n        visible: false ,\r\n        work: \"\",\r\n        todos: [],\r\n        id: 1,\r\n        fullName:this.props.Fisrtname + this.props.Lastname,\r\n    }\r\n\r\n    handleInputChange = (e) =>{\r\n        let work= this.state.work;\r\n        this.setState({\r\n            work: e.target.value \r\n        })\r\n    }\r\n\r\n\r\n    add = () =>{\r\n        if(this.state.work !==\"\"){\r\n            let todo={\r\n                work: this.state.work,\r\n                id: this.state.id,\r\n                isComplete: false\r\n            }\r\n            this.setState({\r\n                todos: this.state.todos.concat(todo),\r\n                id: this.state.id + 1,\r\n                work: \"\"\r\n            })\r\n        }\r\n        else{\r\n            alert(\"Textni kiritng\")\r\n        }\r\n      \r\n    }\r\n\r\n    delete = (id) =>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((todo)=>{\r\n                if (todo.id !== id){\r\n                    return todo\r\n                }\r\n            })\r\n        })\r\n        console.log(\"sherzod\")\r\n    }\r\n\r\n    check = (id) =>{\r\n        this.setState({\r\n            todos: this.state.todos.filter((todo)=>{\r\n                if (todo.id === id){\r\n                    todo.isComplete =! todo.isComplete\r\n                }\r\n                return todo\r\n            })\r\n        })\r\n        console.log(\"sherzod\")\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-5\"> \r\n                    <div className=\"col-md-9\">\r\n                        <input type=\"text\" value={this.state.work} onChange={this.handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"col-md-3\"><button className=\"btn btn-danger\" onClick={this.add}>Add</button></div>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-8\">\r\n                        {this.state.todos.map((todo) =>{\r\n                            \r\n                            var a=  <div className=\"box2 mt-3\" >{todo.work}</div>\r\n                            var b=  <div className=\"box2_1 mt-3\" >{todo.work}</div>\r\n                            return <div className=\"box\">\r\n                                <div className=\"box1 mt-3\" >{todo.id}</div>\r\n                                {todo.isComplete ? \r\n                                b : a \r\n                                }\r\n                                <button className=\"btn btn-dark mt-3\"  style={{fontSize:14}} onClick={()=> this.check(todo.id)}><i className=\"fa fa-check\"></i></button>\r\n                                <button className=\"btn btn-dark mt-3\"  style={{fontSize:14}} onClick={this.showModal}><i className=\"fa fa-pen-nib\"></i></button>\r\n                               \r\n                                <Modal\r\n                                    title=\"Basic Modal\"\r\n                                    visible={this.state.visible}\r\n                                    onOk={this.handleOk}\r\n                                    onCancel={this.handleCancel}\r\n                                    okButtonProps={{ disabled: true }}\r\n                                    cancelButtonProps={{ disabled: true }}\r\n                                    >\r\n                                   \r\n                                 </Modal>\r\n                                <button className=\"btn btn-dark mt-3\" style={{fontSize:14}} onClick={() => this.delete(todo.id)}><i className=\"fa fa-times\"></i></button>\r\n                            </div>\r\n                        }\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":3,"column":8,"nodeType":"39","messageId":"40","endLine":3,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":10,"column":7,"nodeType":"44","endLine":10,"endColumn":11},{"ruleId":"37","severity":1,"message":"45","line":4,"column":17,"nodeType":"39","messageId":"40","endLine":4,"endColumn":23},{"ruleId":"37","severity":1,"message":"46","line":18,"column":13,"nodeType":"39","messageId":"40","endLine":18,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":46,"column":50,"nodeType":"49","messageId":"50","endLine":46,"endColumn":52},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Button' is defined but never used.","'work' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]